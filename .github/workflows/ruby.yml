# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
  env:
    COVERAGE_RUBY_VERSION: '3.3.7'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2.6', ${{ COVERAGE_RUBY_VERSION }}]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
      # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
      # change this to (see https://github.com/ruby/setup-ruby#versioning):
      # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@v1 # v1.146.0
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Create db and run migrations
        env:
          RACK_ENV: test
        run: |
          bundle exec rake db:create
          bundle exec rake db:schema:load
          sqlite3 db/database/test.sqlite3 "select * from schema_migrations"
      - name: Run brakeman
        run: bundle exec brakeman
      - name: setup playwright
        run: bin/playwright_setup
      - name: Cache Playwright Firefox browser
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install Playwright Firefox browser (with deps)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn run playwright install --with-deps firefox

      - name: Install Playwright Firefox browser deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: yarn run playwright install-deps firefox
      - name: Run tests with coverage
        if: matrix.ruby-version == ${{ COVERAGE_RUBY_VERSION }}
        env:
          COVERAGE: "true"
        run: bundle exec rspec
      # Run tests without coverage for other Ruby versions
      - name: Run tests
        if: matrix.ruby-version != ${{ COVERAGE_RUBY_VERSION }}
        run: bundle exec rspec
      # only upload coverage once
      - name: undercover
        if: matrix.ruby-version == ${{ COVERAGE_RUBY_VERSION }}
        run: |
          ruby -e "$(curl -s https://undercover-ci.com/uploader.rb)" -- \
            --repo ${{ github.repository }} \
            --commit ${{ github.event.pull_request.head.sha || github.sha }} \
            --lcov coverage/lcov/aha-secret.lcov
